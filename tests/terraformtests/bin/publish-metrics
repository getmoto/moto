#!/bin/bash

export PROJECT_ROOT=$(pwd) # FIXME

function publish_metrics() {
  export AWS_DEFAULT_REGION=us-east-2
  # check if AWS credentials are configured
  aws cloudwatch list-metrics --namespace test123 > /dev/null || return
  echo "Publishing test results to CloudWatch Metrics ..."

  # generate report
  bin/create-report
  bin/create-report-html

  # prepare data
  now=$(date +"%Y-%m-%dT%H:%M:%S")
  reportFile=$PROJECT_ROOT/build/report.html
  passed=$(sed -r 's|.*<td>passed</td><td>([^<]*)</td>.*|\1|' $reportFile)
  failures=$(sed -r 's|.*<td>failures</td><td>([^<]*)</td>.*|\1|' $reportFile)
  errors=$(sed -r 's|.*<td>errors</td><td>([^<]*)</td>.*|\1|' $reportFile)
  skipped=$(sed -r 's|.*<td>skipped</td><td>([^<]*)</td>.*|\1|' $reportFile)
  total=$(sed -r 's|.*<td><b>Total</b></td><td>([^<]*)</td>.*|\1|' $reportFile)
  passedPercent=$(awk "BEGIN { print $passed / $total }")

  # publish data to CloudWatch
  names=(testsPassed testsPassedPercent testsFailures testsErrors testsSkipped testsTotal)
  values=($passed $passedPercent $failures $errors $skipped $total)
  echo ${values[@]}
  for (( i=0 ; i < ${#names[@]} ; i++ )) {
    aws cloudwatch put-metric-data --namespace ls-tf-tests --metric-name ${names[i]} --value ${values[i]} --timestamp $now
  }
}

publish_metrics
